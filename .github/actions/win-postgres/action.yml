name: Set up PostgreSQL on Windows

runs:
  using: composite
  steps:
    - name: Decide Postgis version (Windows)
      # Borrowed from https://github.com/nyurik/action-setup-postgis/blob/main/action.yml
      id: postgis-ver
      shell: pwsh
      run: |
        echo "PowerShell version: ${PSVersionTable.PSVersion}"
        $PG_VERSION = Split-Path $env:PGROOT -Leaf
        $postgis_page = "https://download.osgeo.org/postgis/windows/pg$PG_VERSION"
        echo "Detecting PostGIS version from $postgis_page for PostgreSQL $PG_VERSION"
        $pgis_bundle = (Invoke-WebRequest -Uri $postgis_page -ErrorAction Stop).Links.Where({$_.href -match "^postgis.*zip$"}).href
        if (!$pgis_bundle) {
          Write-Error "Could not find latest PostGIS version in $postgis_page that would match  ^postgis.*zip$  pattern"
          exit 1
        }
        $pgis_bundle = [IO.Path]::ChangeExtension($pgis_bundle, [NullString]::Value)
        $pgis_bundle_url = "$postgis_page/$pgis_bundle.zip"
        Add-Content $env:GITHUB_OUTPUT "postgis_file=$pgis_bundle"
        Add-Content $env:GITHUB_OUTPUT "postgis_bundle_url=$pgis_bundle_url"

    - uses: actions/cache@v4
      with:
        path: |
          C:/postgis.zip
        key: postgis-cache-${{ steps.postgis-ver.outputs.postgis_file }}

    - name: Download postgis
      run: |
        if (!(Test-Path "C:\postgis.zip")){(new-object net.webclient).DownloadFile($env:PGIS_BUNDLE_URL, "c:\postgis.zip")}
        7z x c:\postgis.zip -oc:\postgis_archive
      shell: pwsh
      env:
        PGIS_BUNDLE_URL: ${{ steps.postgis-ver.outputs.postgis_bundle_url }}

    - name: Install postgis
      run: |
        echo "Root: $PGROOT, Bin: $PGBIN"
        cp -r c:/postgis_archive/postgis-bundle-*/* "$PGROOT"
      shell: bash

    - name: Start PostgreSQL on Windows
      run: |
        $pgService = Get-Service -Name postgresql*
        Set-Service -InputObject $pgService -Status running -StartupType automatic
        Start-Process -FilePath "$env:PGBIN\pg_isready" -Wait -PassThru
      shell: pwsh

    - name: Create test tablespace
      run: |
        mkdir c:\tablespace
        & $env:PGBIN\psql -c "CREATE TABLESPACE tablespacetest LOCATION 'c:/tablespace'"
      shell: pwsh
